#BlueJ class context
comment0.params=name
comment0.target=FishTank(java.lang.String)
comment1.params=
comment1.target=double\ getTankHeight()
comment10.params=newFishNumber
comment10.target=void\ setFishNumber(java.lang.String)
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment2.params=TankHeight
comment2.target=void\ setTankHeight(double)
comment3.params=
comment3.target=double\ getTankWidth()
comment4.params=TankWidth
comment4.target=void\ setTankWidth(double)
comment5.params=
comment5.target=int\ getNumberOfFish()
comment6.params=other
comment6.target=boolean\ equals(FishTank)
comment7.params=newFish
comment7.target=void\ setfish(boolean)
comment7.text=\n\ \ \ \ public\ boolean\ getFish()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ String\ fishCheck;\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ if(\ numberOfFish\ >\ 0)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ fishCheck\ \=\ "The\ tank\ is\ empty.";\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ fishCheck\ \=\ "The\ tank\ is\ not\ empty.";\n\ \ \ \ \ \ \ \ }//end\ ifelse\n\ \ \ \ \ \ \ \ //return;\n\ \ \ \ \ \ \ \ //return\ fishCheck;\n\ \ \ \ }//end\ getter\ fish\n\ \ \ \ \n
comment8.params=newNumberOfFish
comment8.target=void\ setNumberOfFish(int)
comment9.params=
comment9.target=java.lang.String\ getFishNumber()
numComments=12
